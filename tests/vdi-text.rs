extern crate sdl2;
extern crate gemini;


use gemini::vdi;


// This defines a small, 16-character font containing glyphs for the hexadecimal digits.
// The font is 128x8 pixels in size, each glyph being 8x8 pixels.
static FONT : [u16; 64] = [
    0b0001100000001000, 0b0011110000111100, 0b0000100001111110, 0b0011110001111110,
        0b0011110000111100, 0b0001100001111100, 0b0011110001111000, 0b0111111001111110,
    0b0010010000111000, 0b0100001001000010, 0b0001100001000000, 0b0100001000000010,
        0b0100001001000010, 0b0010010001000010, 0b0100001001000100, 0b0100000001000000,
    0b0100001000001000, 0b0000001000000010, 0b0010100001000000, 0b0100000000000100,
        0b0100001001000010, 0b0010010001000010, 0b0100000001000010, 0b0100000001000000,
    0b0100001000001000, 0b0001110000011100, 0b0010100001111100, 0b0111110000000100,
        0b0011110000111100, 0b0100001001111100, 0b0100000001000010, 0b0111100001111000,
    0b0100001000001000, 0b0010000000000010, 0b0111111000000010, 0b0100001000001000,
        0b0100001000000010, 0b0111111001000010, 0b0100000001000010, 0b0100000001000000,
    0b0010010000001000, 0b0100000001000010, 0b0000100001000010, 0b0100001000001000,
        0b0100001001000010, 0b0100001001000010, 0b0100001001000100, 0b0100000001000000,
    0b0001100000111110, 0b0111111000111100, 0b0000100000111100, 0b0011110000001000,
        0b0011110000111100, 0b0100001001111100, 0b0011110001111000, 0b0111111001000000,
    0b0000000000000000, 0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
        0b0000000000000000, 0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
];


static DESKTOP : [u16; 16] = [
    0xAAAA, 0x5555, 0xAAAA, 0x5555,
    0xAAAA, 0x5555, 0xAAAA, 0x5555,
    0xAAAA, 0x5555, 0xAAAA, 0x5555,
    0xAAAA, 0x5555, 0xAAAA, 0x5555,
];

#[test]
fn text() {
    let sdl = sdl2::init().unwrap();
    let vdi : &mut vdi::VDI =
        &mut vdi::SDL2Vdi::new(&sdl, 640, 480, "blah").unwrap();
    
    vdi.rect((0, 0), (640, 480), &DESKTOP);

    for x in 0..16 {
        vdi.copy_rect(
            (x*8, 0), 128, &FONT,
            (x * 8, 0),
            (8, 8),
            0b01010101,
        );
    }

    vdi.commit().unwrap();

{
use std::{thread,time};
thread::sleep(time::Duration::new(15,0));
}
}
